{"mappings":"ACWA,IAAK,IARC,EAAQ,MAAM,IAAI,CAAC,SAAS,aAAa,CAAC,MAAM,QAAQ,EAAE,GAAG,CAAC,SAAC,CAArE,EACE,OAAO,EAAG,WAAW,AACvB,GAEM,EAAK,SAAS,gBAAgB,CAAC,MAE/B,EAAS,EAAE,CAER,EAAI,EAAG,EAAI,EAAG,MAAM,CAAE,IAAK,CAIlC,IAAK,IACe,EAJd,EAAQ,CAAE,CAAC,EAAE,CAAC,QAAQ,CACtB,EAAQ,CAAC,EAEN,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAChC,CAAK,CAAC,CAAK,CAAC,EAAE,CAAC,CAAG,AAAA,CAAA,AAAQ,OAAR,CAAA,EAAA,CAAK,CAAC,EAAE,AAAF,GAAN,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAU,WAAW,AAAX,GAAe,GAG7C,EAAO,IAAI,CAAC,EACd,CAEA,EAAO,GAAG,GAIV,AAFc,SAAS,aAAa,CAAC,SAE/B,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,MAC5B,EAAe,EAAE,AAEjB,CAAA,EAAO,WAAW,GAAK,CAAK,CAAC,EAAE,EACjC,CAAA,EAAe,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CADjC,EAEI,OAAO,CAAC,CAAC,CAAK,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAK,CAAC,EAAE,CAAC,CAC9C,EAAA,EAGE,EAAO,WAAW,GAAK,CAAK,CAAC,EAAE,EACjC,CAAA,EAAe,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CADjC,EAEI,OAAO,CAAC,CAAC,CAAK,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAK,CAAC,EAAE,CAAC,CAC9C,EAAA,EAGE,EAAO,WAAW,GAAK,CAAK,CAAC,EAAE,EACjC,CAAA,EAAe,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CADjC,EAEI,MAAO,CAAC,CAAC,CAAC,CAAK,CAAC,EAAE,CAAC,CAAG,CAAC,CAAC,CAAC,CAAK,CAAC,EAAE,CAAC,AACpC,EAAA,EAGE,EAAO,WAAW,GAAK,CAAK,CAAC,EAAE,EACjC,CAAA,EAAe,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CADjC,EAKI,OAAO,AAHS,SAAS,CAAC,CAAC,CAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAS,KACtC,SAAS,CAAC,CAAC,CAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAS,IAGxD,EAAA,EAGF,IAAM,EAAQ,SAAS,aAAa,CAAC,SAErC,MAAM,IAAI,CAAC,EAAM,QAAQ,EAAE,OAAO,CAAC,SAAC,CAApC,EACE,EAAQ,MAAM,EAChB,GAEA,EAAa,OAAO,CAAC,SAAC,CAAtB,EACE,IACQ,EAIJ,EAJF,IAAA,CACU,EAGR,EAHF,QAAA,CACK,EAEH,EAFF,GAAA,CACA,EACE,EADF,MAJF,CAMM,EAAQ,SAAS,aAAa,CAAC,MAGrC,AAFkB,CAAC,EAAY,EAAU,EAAK,EAAO,CAE3C,OAAO,CAAC,SAAC,CAAnB,EACE,IAAM,EAAQ,SAAS,aAAa,CAAC,KAErC,CAAA,EAAM,WAAW,CAAG,EACpB,EAAM,MAAM,CAAC,EACf,GAEA,EAAM,MAAM,CAAC,EACf,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\nvar heads = Array.from(document.querySelector(\"tr\").children).map(function(th) {\n    return th.textContent;\n});\nvar tr = document.querySelectorAll(\"tr\");\nvar tables = [];\nfor(var i = 1; i < tr.length; i++){\n    var _cells_j;\n    var cells = tr[i].children;\n    var table = {};\n    for(var j = 0; j < heads.length; j++)table[heads[j]] = ((_cells_j = cells[j]) === null || _cells_j === void 0 ? void 0 : _cells_j.textContent) || \"\";\n    tables.push(table);\n}\ntables.pop();\nvar thead = document.querySelector(\"thead\");\nthead.addEventListener(\"click\", function(e) {\n    var header = e.target.closest(\"th\");\n    var sortedTables = [];\n    if (header.textContent === heads[0]) sortedTables = tables.sort(function(a, b) {\n        return a[heads[0]].localeCompare(b[heads[0]]);\n    });\n    if (header.textContent === heads[1]) sortedTables = tables.sort(function(a, b) {\n        return a[heads[1]].localeCompare(b[heads[1]]);\n    });\n    if (header.textContent === heads[2]) sortedTables = tables.sort(function(a, b) {\n        return +a[heads[2]] - +b[heads[2]];\n    });\n    if (header.textContent === heads[3]) sortedTables = tables.sort(function(a, b) {\n        var salary1 = parseInt(a[heads[3]].replace(/[$,]/g, \"\"));\n        var salary2 = parseInt(b[heads[3]].replace(/[$,]/g, \"\"));\n        return salary1 - salary2;\n    });\n    var tbody = document.querySelector(\"tbody\");\n    Array.from(tbody.children).forEach(function(element) {\n        element.remove();\n    });\n    sortedTables.forEach(function(person) {\n        var personName = person.Name, position = person.Position, age = person.Age, salary = person.Salary;\n        var newTr = document.createElement(\"tr\");\n        var personArr = [\n            personName,\n            position,\n            age,\n            salary\n        ];\n        personArr.forEach(function(item) {\n            var newTd = document.createElement(\"td\");\n            newTd.textContent = item;\n            newTr.append(newTd);\n        });\n        tbody.append(newTr);\n    });\n});\n\n//# sourceMappingURL=index.d2be3cb0.js.map\n","'use strict';\n\n// write code here\nconst heads = Array.from(document.querySelector('tr').children).map((th) => {\n  return th.textContent;\n});\n\nconst tr = document.querySelectorAll('tr');\n\nconst tables = [];\n\nfor (let i = 1; i < tr.length; i++) {\n  const cells = tr[i].children;\n  const table = {};\n\n  for (let j = 0; j < heads.length; j++) {\n    table[heads[j]] = cells[j]?.textContent || '';\n  }\n\n  tables.push(table);\n}\n\ntables.pop();\n\nconst thead = document.querySelector('thead');\n\nthead.addEventListener('click', (e) => {\n  const header = e.target.closest('th');\n  let sortedTables = [];\n\n  if (header.textContent === heads[0]) {\n    sortedTables = tables.sort((a, b) => {\n      return a[heads[0]].localeCompare(b[heads[0]]);\n    });\n  }\n\n  if (header.textContent === heads[1]) {\n    sortedTables = tables.sort((a, b) => {\n      return a[heads[1]].localeCompare(b[heads[1]]);\n    });\n  }\n\n  if (header.textContent === heads[2]) {\n    sortedTables = tables.sort((a, b) => {\n      return +a[heads[2]] - +b[heads[2]];\n    });\n  }\n\n  if (header.textContent === heads[3]) {\n    sortedTables = tables.sort((a, b) => {\n      const salary1 = parseInt(a[heads[3]].replace(/[$,]/g, ''));\n      const salary2 = parseInt(b[heads[3]].replace(/[$,]/g, ''));\n\n      return salary1 - salary2;\n    });\n  }\n\n  const tbody = document.querySelector('tbody');\n\n  Array.from(tbody.children).forEach((element) => {\n    element.remove();\n  });\n\n  sortedTables.forEach((person) => {\n    const {\n      Name: personName,\n      Position: position,\n      Age: age,\n      Salary: salary,\n    } = person;\n    const newTr = document.createElement('tr');\n    const personArr = [personName, position, age, salary];\n\n    personArr.forEach((item) => {\n      const newTd = document.createElement('td');\n\n      newTd.textContent = item;\n      newTr.append(newTd);\n    });\n\n    tbody.append(newTr);\n  });\n});\n"],"names":["heads","Array","from","document","querySelector","children","map","th","textContent","tr","querySelectorAll","tables","i","length","_cells_j","cells","table","j","push","pop","thead","addEventListener","e","header","target","closest","sortedTables","sort","a","b","localeCompare","salary1","parseInt","replace","tbody","forEach","element","remove","person","personName","Name","position","Position","age","Age","salary","Salary","newTr","createElement","personArr","item","newTd","append"],"version":3,"file":"index.d2be3cb0.js.map"}