{"mappings":"AAAA;AAEA,kBAAkB;AAClB,MAAM,QAAQ,MAAM,IAAI,CAAC,SAAS,aAAa,CAAC,MAAM,QAAQ,EAAE,GAAG,CAAC,CAAC;IACnE,OAAO,GAAG,WAAW;AACvB;AAEA,MAAM,KAAK,SAAS,gBAAgB,CAAC;AAErC,MAAM,SAAS,EAAE;AAEjB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,MAAM,EAAE,IAAK;IAClC,MAAM,QAAQ,EAAE,CAAC,EAAE,CAAC,QAAQ;IAC5B,MAAM,QAAQ,CAAC;IAEf,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAChC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE,EAAE,eAAe;IAG7C,OAAO,IAAI,CAAC;AACd;AAEA,OAAO,GAAG;AAEV,MAAM,QAAQ,SAAS,aAAa,CAAC;AAErC,MAAM,gBAAgB,CAAC,SAAS,CAAC;IAC/B,MAAM,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC;IAChC,IAAI,eAAe,EAAE;IAErB,IAAI,OAAO,WAAW,KAAK,KAAK,CAAC,EAAE,EACjC,eAAe,OAAO,IAAI,CAAC,CAAC,GAAG;QAC7B,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;IAC9C;IAGF,IAAI,OAAO,WAAW,KAAK,KAAK,CAAC,EAAE,EACjC,eAAe,OAAO,IAAI,CAAC,CAAC,GAAG;QAC7B,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;IAC9C;IAGF,IAAI,OAAO,WAAW,KAAK,KAAK,CAAC,EAAE,EACjC,eAAe,OAAO,IAAI,CAAC,CAAC,GAAG;QAC7B,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;IACpC;IAGF,IAAI,OAAO,WAAW,KAAK,KAAK,CAAC,EAAE,EACjC,eAAe,OAAO,IAAI,CAAC,CAAC,GAAG;QAC7B,MAAM,UAAU,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS;QACtD,MAAM,UAAU,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS;QAEtD,OAAO,UAAU;IACnB;IAGF,MAAM,QAAQ,SAAS,aAAa,CAAC;IAErC,MAAM,IAAI,CAAC,MAAM,QAAQ,EAAE,OAAO,CAAC,CAAC;QAClC,QAAQ,MAAM;IAChB;IAEA,aAAa,OAAO,CAAC,CAAC;QACpB,MAAM,EACJ,MAAM,UAAU,EAChB,UAAU,QAAQ,EAClB,KAAK,GAAG,EACR,QAAQ,MAAM,EACf,GAAG;QACJ,MAAM,QAAQ,SAAS,aAAa,CAAC;QACrC,MAAM,YAAY;YAAC;YAAY;YAAU;YAAK;SAAO;QAErD,UAAU,OAAO,CAAC,CAAC;YACjB,MAAM,QAAQ,SAAS,aAAa,CAAC;YAErC,MAAM,WAAW,GAAG;YACpB,MAAM,MAAM,CAAC;QACf;QAEA,MAAM,MAAM,CAAC;IACf;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// write code here\nconst heads = Array.from(document.querySelector('tr').children).map((th) => {\n  return th.textContent;\n});\n\nconst tr = document.querySelectorAll('tr');\n\nconst tables = [];\n\nfor (let i = 1; i < tr.length; i++) {\n  const cells = tr[i].children;\n  const table = {};\n\n  for (let j = 0; j < heads.length; j++) {\n    table[heads[j]] = cells[j]?.textContent || '';\n  }\n\n  tables.push(table);\n}\n\ntables.pop();\n\nconst thead = document.querySelector('thead');\n\nthead.addEventListener('click', (e) => {\n  const header = e.target.closest('th');\n  let sortedTables = [];\n\n  if (header.textContent === heads[0]) {\n    sortedTables = tables.sort((a, b) => {\n      return a[heads[0]].localeCompare(b[heads[0]]);\n    });\n  }\n\n  if (header.textContent === heads[1]) {\n    sortedTables = tables.sort((a, b) => {\n      return a[heads[1]].localeCompare(b[heads[1]]);\n    });\n  }\n\n  if (header.textContent === heads[2]) {\n    sortedTables = tables.sort((a, b) => {\n      return +a[heads[2]] - +b[heads[2]];\n    });\n  }\n\n  if (header.textContent === heads[3]) {\n    sortedTables = tables.sort((a, b) => {\n      const salary1 = parseInt(a[heads[3]].replace(/[$,]/g, ''));\n      const salary2 = parseInt(b[heads[3]].replace(/[$,]/g, ''));\n\n      return salary1 - salary2;\n    });\n  }\n\n  const tbody = document.querySelector('tbody');\n\n  Array.from(tbody.children).forEach((element) => {\n    element.remove();\n  });\n\n  sortedTables.forEach((person) => {\n    const {\n      Name: personName,\n      Position: position,\n      Age: age,\n      Salary: salary,\n    } = person;\n    const newTr = document.createElement('tr');\n    const personArr = [personName, position, age, salary];\n\n    personArr.forEach((item) => {\n      const newTd = document.createElement('td');\n\n      newTd.textContent = item;\n      newTr.append(newTd);\n    });\n\n    tbody.append(newTr);\n  });\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}